load("//bazel:tachyon.bzl", "if_gpu_is_configured")
load(
    "//bazel:tachyon_cc.bzl",
    "tachyon_cc_benchmark",
    "tachyon_cc_library",
    "tachyon_cc_unittest",
    "tachyon_cuda_test",
    "tachyon_cuda_unittest",
)

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "cubic_extension_field",
    hdrs = ["cubic_extension_field.h"],
    deps = [
        ":cyclotomic_multiplicative_subgroup",
        "//tachyon/base/buffer:copyable",
        "//tachyon/base/json",
        "//tachyon/math/geometry:point3",
        "@com_google_absl//absl/strings",
    ],
)

tachyon_cc_library(
    name = "cyclotomic_multiplicative_subgroup",
    hdrs = ["cyclotomic_multiplicative_subgroup.h"],
    deps = [
        ":finite_field",
        "//tachyon/base/containers:adapters",
    ],
)

tachyon_cc_library(
    name = "finite_field",
    hdrs = ["finite_field.h"],
    deps = [
        ":finite_field_traits",
        "//tachyon/math/base:field",
        "//tachyon/math/finite_fields/square_root_algorithms",
    ],
)

tachyon_cc_library(
    name = "finite_field_forwards",
    hdrs = ["finite_field_forwards.h"],
)

tachyon_cc_library(
    name = "finite_field_traits",
    hdrs = ["finite_field_traits.h"],
    deps = [":finite_field_forwards"],
)

tachyon_cc_library(
    name = "fp2",
    hdrs = ["fp2.h"],
    deps = [":quadratic_extension_field"],
)

tachyon_cc_library(
    name = "fp3",
    hdrs = ["fp3.h"],
    deps = [
        ":cubic_extension_field",
        "//tachyon/math/base/gmp:gmp_util",
    ],
)

tachyon_cc_library(
    name = "fp4",
    hdrs = ["fp4.h"],
    deps = [
        ":quadratic_extension_field",
        "//tachyon/math/base/gmp:gmp_util",
    ],
)

tachyon_cc_library(
    name = "fp6",
    hdrs = ["fp6.h"],
    deps = [
        ":cubic_extension_field",
        ":quadratic_extension_field",
        "//tachyon/math/base/gmp:gmp_util",
    ],
)

tachyon_cc_library(
    name = "fp12",
    hdrs = ["fp12.h"],
    deps = [
        ":quadratic_extension_field",
        "//tachyon/math/base/gmp:gmp_util",
    ],
)

tachyon_cc_library(
    name = "legendre_symbol",
    hdrs = ["legendre_symbol.h"],
)

tachyon_cc_library(
    name = "modulus",
    hdrs = ["modulus.h"],
    deps = ["//tachyon/math/base:big_int"],
)

tachyon_cc_library(
    name = "prime_field_base",
    hdrs = ["prime_field_base.h"],
    deps = [
        ":finite_field",
        ":legendre_symbol",
        ":prime_field_util",
        "//tachyon/base:bits",
        "//tachyon/base/json",
        "//tachyon/base/strings:string_number_conversions",
        "//tachyon/math/base/gmp:gmp_util",
        "@com_google_absl//absl/hash",
    ],
)

tachyon_cc_library(
    name = "prime_field_conversions",
    hdrs = ["prime_field_conversions.h"],
    deps = [
        ":prime_field",
        ":prime_field_gpu_debug",
    ] + if_gpu_is_configured([
        ":prime_field_gpu",
    ]),
)

tachyon_cc_library(
    name = "prime_field",
    hdrs = ["prime_field.h"],
    deps = [
        ":modulus",
        ":prime_field_base",
        "//tachyon/base:compiler_specific",
        "//tachyon/base:logging",
        "//tachyon/base/containers:adapters",
        "//tachyon/base/strings:string_util",
        "//tachyon/math/base:arithmetics",
        "//tachyon/math/base/gmp:gmp_util",
        "@com_google_googletest//:gtest_prod",
    ],
)

tachyon_cc_library(
    name = "prime_field_gpu",
    hdrs = ["prime_field_gpu.h"],
    deps = [
        ":prime_field",
        "//tachyon/math/finite_fields/kernels:carry_chain",
    ],
)

tachyon_cc_library(
    name = "prime_field_gpu_debug",
    hdrs = [
        "carry_chain.h",
        "prime_field_gpu_debug.h",
        "prime_field_ops_internal.h",
    ],
    deps = [":prime_field"],
)

tachyon_cc_library(
    name = "prime_field_util",
    srcs = ["prime_field_util.cc"],
    hdrs = ["prime_field_util.h"],
    deps = [
        "//tachyon:export",
        "@local_config_gmp//:gmp",
    ],
)

tachyon_cc_library(
    name = "quadratic_extension_field",
    hdrs = ["quadratic_extension_field.h"],
    deps = [
        ":cyclotomic_multiplicative_subgroup",
        "//tachyon/base/buffer:copyable",
        "//tachyon/base/json",
        "//tachyon/math/geometry:point2",
        "@com_google_absl//absl/strings",
    ],
)

tachyon_cc_unittest(
    name = "finite_fields_unittests",
    srcs = [
        "cubic_extension_field_unittest.cc",
        "finite_field_unittest.cc",
        "fp12_unittest.cc",
        "fp2_unittest.cc",
        "fp6_unittest.cc",
        "modulus_unittest.cc",
        "prime_field_base_unittest.cc",
        "prime_field_unittest.cc",
        "quadratic_extension_field_unittest.cc",
    ],
    deps = [
        "//tachyon/base:bits",
        "//tachyon/base/buffer:vector_buffer",
        "//tachyon/math/elliptic_curves/bn/bn254:fq12",
        "//tachyon/math/elliptic_curves/bn/bn254:fr",
        "//tachyon/math/finite_fields/test:finite_field_test",
        "//tachyon/math/finite_fields/test:gf7",
        "//tachyon/math/finite_fields/test:gf7_2",
        "//tachyon/math/finite_fields/test:gf7_3",
        "@com_google_absl//absl/hash:hash_testing",
    ],
)

tachyon_cuda_unittest(
    name = "finite_fields_gpu_unittests",
    srcs = if_gpu_is_configured(["prime_field_gpu_unittest.cc"]),
    deps = [
        ":prime_field_conversions",
        "//tachyon/device/gpu:gpu_memory",
        "//tachyon/math/finite_fields/kernels:prime_field_ops",
        "//tachyon/math/finite_fields/test:finite_field_test",
        "//tachyon/math/finite_fields/test:gf7_gpu",
        "//tachyon/math/test:launch_op_macros",
    ],
)

tachyon_cuda_test(
    name = "finite_field_correctness_gpu_tests",
    size = "small",
    srcs = if_gpu_is_configured(["prime_field_correctness_gpu_test.cc"]),
    deps = [
        ":prime_field_conversions",
        "//tachyon/device/gpu:gpu_memory",
        "//tachyon/math/elliptic_curves/bn/bn254:fq_gpu",
        "//tachyon/math/finite_fields/kernels:prime_field_ops",
        "//tachyon/math/finite_fields/test:finite_field_test",
        "//tachyon/math/test:launch_op_macros",
    ],
)

tachyon_cc_benchmark(
    name = "prime_field_benchmark",
    size = "small",
    srcs = ["prime_field_benchmark.cc"],
    deps = [
        "//tachyon/math/elliptic_curves/bn/bn254:fq",
        "//tachyon/math/elliptic_curves/bn/bn254:fr",
        "//tachyon/math/finite_fields/goldilocks_prime:goldilocks",
    ],
)
