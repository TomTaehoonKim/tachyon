load("//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_unittest")

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "circuit_test",
    testonly = True,
    hdrs = ["circuit_test.h"],
    deps = ["//tachyon/zk/plonk/halo2:prover_test"],
)

tachyon_cc_library(
    name = "fibonacci_circuits",
    hdrs = [
        "fibonacci_circuit.h",
        "fibonacci_circuit2.h",
        "fibonacci_circuit3.h",
        "fibonacci_circuit4.h",
    ],
    deps = [
        ":is_zero_chip",
        "//tachyon/zk/plonk/circuit",
        "//tachyon/zk/plonk/circuit:assigned_cell",
    ],
)

tachyon_cc_library(
    name = "is_zero_chip",
    hdrs = ["is_zero_chip.h"],
    deps = [
        "//tachyon/zk/expressions:expression_factory",
        "//tachyon/zk/plonk:constraint_system",
        "//tachyon/zk/plonk/circuit:region",
    ],
)

tachyon_cc_library(
    name = "simple_circuit",
    hdrs = ["simple_circuit.h"],
    deps = [
        "//tachyon/zk/plonk/circuit",
        "//tachyon/zk/plonk/circuit:virtual_cells",
    ],
)

tachyon_cc_library(
    name = "simple_lookup_circuit",
    hdrs = ["simple_lookup_circuit.h"],
    deps = [
        "//tachyon/zk/plonk/circuit",
        "//tachyon/zk/plonk/circuit:virtual_cells",
    ],
)

tachyon_cc_unittest(
    name = "examples_unittests",
    srcs = [
        "fibonacci_circuit_unittest.cc",
        "simple_circuit_unittest.cc",
        "simple_lookup_circuit_unittest.cc",
        "simple_lookup_v1_circuit_unittest.cc",
        "simple_v1_circuit_unittest.cc",
    ],
    deps = [
        ":circuit_test",
        ":fibonacci_circuits",
        ":simple_circuit",
        ":simple_lookup_circuit",
        "//tachyon/zk/plonk/circuit/floor_planner:simple_floor_planner",
        "//tachyon/zk/plonk/circuit/floor_planner/v1:v1_floor_planner",
        "//tachyon/zk/plonk/halo2:pinned_verifying_key",
        "//tachyon/zk/plonk/keys:proving_key",
    ],
)
